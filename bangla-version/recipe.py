import random
import tkinter as tk
from tkinter import messagebox
import webbrowser

# ========== ржЙржкрж╛ржжрж╛ржирж╕ржорзВрж╣ ржПржмржВ рждрж╛ржжрзЗрж░ ржкрж░рж┐ржорж╛ржг ========== #
ingredients = {
    "ржЪрж╛рж▓": "рзз ржХрж╛ржк",
    "ржорж╛ржВрж╕": "рзирзжрзж ржЧрзНрж░рж╛ржо",
    "рж╕ржмржЬрж┐": "рзйрзжрзж ржЧрзНрж░рж╛ржо",
    "ржбрж╛рж▓": "рзз ржХрж╛ржк",
    "ржжржЗ": "рзи ржЪрж╛ржоржЪ",
    "ржЯржорзЗржЯрзЛ": "рзиржЯрж┐",
    "ржкрзЗржБрзЯрж╛ржЬ": "рззржЯрж┐",
    "рж░рж╕рзБржи": "рзй ржХрзЛрзЯрж╛",
    "ржорж╢рж▓рж╛": "рзз ржЪрж╛ржоржЪ",
    "ржирзБржи": "рж╕рзНржмрж╛ржж ржЕржирзБржпрж╛рзЯрзА",
    "ржЪрж┐ржирж┐": "рзз ржЪрж╛ржоржЪ",
    "ржЖрж▓рзБ": "рзиржЯрж┐"
}

# ========== рж░рж╛ржирзНржирж╛рж░ ржкржжрзНржзрждрж┐ ========== #
cooking_methods = [
    "ржнрж╛ржЬрж╛", "рж╕рзЗржжрзНржз", "рждрзЗрж▓рзЗ ржнрж╛ржЬрж╛", "ржХрж╛ржмрж╛ржм", "ржкрзЗржБрзЯрж╛ржЬ ржжрж┐рзЯрзЗ рж░рж╛ржирзНржирж╛", "рж░рж╛ржирзНржирж╛рж░ ржорж┐рж╢рзНрж░ржг"
]

# ========== рж░рж╛ржирзНржирж╛рж░ ржзрж╛ржк ========== #
cooking_steps = {
    "ржкрзЛрж▓рж╛ржУ": [
        "ржЪрж╛рж▓ ржзрзБрзЯрзЗ рзирзж ржорж┐ржирж┐ржЯ ржкрж╛ржирж┐ ржлрзЗрж▓рзЗ рж░рж╛ржЦрзБржиред",
        "ржкрзЗржБрзЯрж╛ржЬ ржПржмржВ ржорж╛ржВрж╕ ржХрзЗржЯрзЗ ржирж┐ржиред",
        "рждрзЗрж▓ ржЧрж░ржо ржХрж░рзЗ ржорж╛ржВрж╕ ржУ ржкрзЗржБрзЯрж╛ржЬ ржнрзЗржЬрзЗ ржирж┐ржиред",
        "ржЪрж╛рж▓, ржорж╢рж▓рж╛, ржкрж╛ржирж┐ ржжрж┐рзЯрзЗ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред"
    ],
    "ржмрж┐рж░рж┐рзЯрж╛ржирж┐": [
        "ржЪрж╛рж▓ ржзрзБрзЯрзЗ рзйрзж ржорж┐ржирж┐ржЯ ржкрж╛ржирж┐рждрзЗ ржнрж┐ржЬрж┐рзЯрзЗ рж░рж╛ржЦрзБржиред",
        "ржорж╛ржВрж╕, ржорж╢рж▓рж╛, ржкрзЗржБрзЯрж╛ржЬ ржХрзЗржЯрзЗ рж░рж╛ржЦрзБржиред",
        "ржорж╛ржВрж╕ ржПржмржВ ржорж╢рж▓рж╛ ржорж┐рж╢рж┐рзЯрзЗ ржХрж┐ржЫрзБ рж╕ржорзЯ ржорзНржпрж╛рж░рж┐ржирзЗржЯ ржХрж░рзБржиред",
        "ржЪрж╛рж▓, ржорж╛ржВрж╕, ржПржмржВ ржорж╢рж▓рж╛ ржПржХрж╕рж╛ржерзЗ ржврзЗрж▓рзЗ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред"
    ],
    "ржЦрж┐ржЪрзБржбрж╝рж┐": [
        "ржЪрж╛рж▓ ржзрзБрзЯрзЗ рззрзл ржорж┐ржирж┐ржЯ ржкрж╛ржирж┐рждрзЗ ржнрж┐ржЬрж┐рзЯрзЗ рж░рж╛ржЦрзБржиред",
        "ржкрж╛ржирж┐ ржлрзБржЯрж┐рзЯрзЗ ржЪрж╛рж▓ ржпрзЛржЧ ржХрж░рзБржи ржПржмржВ рж╕рзЗржжрзНржз рж╣рждрзЗ ржжрж┐ржиред"
    ],
    "рж╕ржмржЬрж┐ рждрж░ржХрж╛рж░рж┐": [
        "рж╕ржмржЬрж┐ ржХрзЗржЯрзЗ ржирж┐ржиред",
        "ржкрзЗржБрзЯрж╛ржЬ, рж░рж╕рзБржи, ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ рждрзЗрж▓ ржЧрж░ржо ржХрж░рзЗ ржнрж╛ржЬрзБржиред",
        "рж╕ржмржЬрж┐ ржжрж┐рзЯрзЗ ржХрж┐ржЫрзБ рж╕ржорзЯ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред"
    ],
    "ржбрж╛рж▓ ржнрж╛ржд": [
        "ржбрж╛рж▓ рж╕рзЗржжрзНржз ржХрж░рждрзЗ рж░рж╛ржЦрзБржиред",
        "ржнрж╛ржд рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред",
        "ржбрж╛рж▓рзЗрж░ рж╕рж╛ржерзЗ ржЧрж░ржо ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ ржЭрзЛрж▓ рждрзИрж░рж┐ ржХрж░рзБржиред"
    ],
    "ржЧрж░рзБрж░ ржорж╛ржВрж╕": [
        "ржЧрж░рзБрж░ ржорж╛ржВрж╕ рж╕рзЗржжрзНржз ржХрж░рзЗ рж░рж╛ржЦрзБржиред",
        "ржкрзЗржБрзЯрж╛ржЬ, рж░рж╕рзБржи, ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ ржорж╛ржВрж╕ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред",
        "ржЧрж░ржо ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ ржХрж╛рж░рж┐ рждрзИрж░рж┐ ржХрж░рзБржиред"
    ],
    "ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕": [
        "ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕ ржзрзБрзЯрзЗ ржХрзЗржЯрзЗ ржирж┐ржиред",
        "ржкрзЗржБрзЯрж╛ржЬ, рж░рж╕рзБржи, ржЖржжрж╛ ржХрзБржЪрж┐ ржХрж░рзЗ ржорж╛ржВрж╕рзЗ ржорж╛ржЦрж┐рзЯрзЗ ржХрж┐ржЫрзБ рж╕ржорзЯ ржорзНржпрж╛рж░рж┐ржирзЗржЯ ржХрж░рзБржиред",
        "рждрзЗрж▓ ржЧрж░ржо ржХрж░рзЗ ржкрзЗржБрзЯрж╛ржЬ, рж░рж╕рзБржи, ржЖржжрж╛ ржнрзЗржЬрзЗ ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕ ржпрзЛржЧ ржХрж░рзБржиред",
        "ржорж╛ржВрж╕ рж╕рзЗржжрзНржз рж╣рж▓рзЗ, ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ рж░рж╛ржирзНржирж╛ ржХрж░рзБржиред",
        "ржЧрж░ржо ржорж╢рж▓рж╛ ржжрж┐рзЯрзЗ ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕ ржкрж░рж┐ржмрзЗрж╢ржи ржХрж░рзБржиред"
    ]
}

# ========== рж░рж╛ржирзНржирж╛рж░ рж╕ржорзЯ ржПржмржВ рждрж╛ржкржорж╛рждрзНрж░рж╛ ========== #
cooking_time = {
    "ржкрзЛрж▓рж╛ржУ": {"time": "рзйрзж ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "ржмрж┐рж░рж┐рзЯрж╛ржирж┐": {"time": "рзкрзл ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "ржЦрж┐ржЪрзБржбрж╝рж┐": {"time": "рзирзж ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "рж╕ржмржЬрж┐ рждрж░ржХрж╛рж░рж┐": {"time": "рзирзл ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "ржбрж╛рж▓ ржнрж╛ржд": {"time": "рзйрзж ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "ржЧрж░рзБрж░ ржорж╛ржВрж╕": {"time": "рзкрзж ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"},
    "ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕": {"time": "рзкрзл ржорж┐ржирж┐ржЯ", "temperature": "ржорж╛ржЭрж╛рж░рж┐ рждрж╛ржк"}
}

# ========== ржнрж┐ржбрж┐ржУ URL (Web Browser) ========== #
video_urls = {
    "ржкрзЛрж▓рж╛ржУ": "https://youtu.be/OQWCirmPotc?t=3",
    "ржмрж┐рж░рж┐рзЯрж╛ржирж┐": "https://youtu.be/v-55n1M05IE?t=4",
    "ржЦрж┐ржЪрзБржбрж╝рж┐": "https://youtu.be/3KqFWcFlxcI?t=5",
    "рж╕ржмржЬрж┐ рждрж░ржХрж╛рж░рж┐": "https://youtu.be/tchbuipZ88k?t=3",
    "ржбрж╛рж▓ ржнрж╛ржд": "https://youtu.be/1QF0KAgkZEI?t=2",
    "ржЧрж░рзБрж░ ржорж╛ржВрж╕": "https://youtu.be/1x8IF78ztvU",
    "ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕": "https://youtu.be/g4xgTP447pE?t=3"
}

# ========== рж░рж╛ржирзНржирж╛рж░ ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛ ========== #
def generate_recipe(dish_choice):
    dish = dish_choice
    selected_ingredients = random.sample(list(ingredients.keys()), 4)
    selected_ingredients_with_quantity = [f"{ingredient} ({ingredients[ingredient]})" for ingredient in selected_ingredients]
    method = random.choice(cooking_methods)
    time = cooking_time[dish]["time"]
    temperature = cooking_time[dish]["temperature"]
    steps = cooking_steps[dish]
    recipe = f"ЁЯФ╕ ржЖржЬржХрзЗрж░ рж░рзЗрж╕рж┐ржкрж┐: {dish}\n\n" \
             f"ЁЯФ╣ ржЙржкрж╛ржжрж╛ржирж╕ржорзВрж╣:\n" + "\n".join([f"- {ingredient}" for ingredient in selected_ingredients_with_quantity]) + "\n\n" \
             f"ЁЯФ╣ рж░рж╛ржирзНржирж╛рж░ ржкржжрзНржзрждрж┐: {method}\n" \
             f"ЁЯФ╣ рж░рж╛ржирзНржирж╛рж░ рж╕ржорзЯ: {time}\n" \
             f"ЁЯФ╣ рж░рж╛ржирзНржирж╛рж░ рждрж╛ржкржорж╛рждрзНрж░рж╛: {temperature}\n\n" \
             f"ЁЯФ╕ рж░рж╛ржирзНржирж╛рж░ ржзрж╛ржкрж╕ржорзВрж╣:\n"
            
    for idx, step in enumerate(steps, 1):
        recipe += f"{idx}. {step}\n"
        
    return recipe

# ========== ржнрж┐ржбрж┐ржУ ржЪрж╛рж▓рж╛ржирзЛрж░ ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛ ========== #
def play_video(dish_choice):
    video_url = video_urls.get(dish_choice)  # Get the corresponding video URL for the selected dish
    if video_url:
        webbrowser.open(video_url)  # Open the video URL in the default web browser
    else:
        messagebox.showerror("Error", "ржнрж┐ржбрж┐ржУ URL ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!")

# ========== GUI рждрзИрж░рж┐ ========== #
def show_recipe():
    selected_dish = dish_var.get()  
    
    if selected_dish == "":
        messagebox.showwarning("Warning", "ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржПржХржЯрж┐ ржЦрж╛ржмрж╛рж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи!")
        return

    recipe = generate_recipe(selected_dish)
    
    recipe_text.delete(1.0, tk.END)
    recipe_text.insert(tk.END, recipe)
    
    # Show the video button after recipe is generated
    video_button.pack(pady=5)

# ========== Tkinter GUI рж╕рзЗржЯржЖржк ========== #
root = tk.Tk()
root.title("ржЦрж╛ржжрзНржп рж░рзЗрж╕рж┐ржкрж┐ ржЬрзЗржирж╛рж░рзЗржЯрж░")
root.geometry("500x600")
root.configure(bg="#f7e8c8")

# ========== рж╕рзНржЯрж╛ржЗрж▓рж┐ржВ ========== #
title_label = tk.Label(root, text="рж░рзЗрж╕рж┐ржкрж┐ рждрзИрж░рж┐", font=("Arial", 16, "bold"), fg="#4a403a", bg="#f7e8c8")
title_label.pack(pady=10)

dish_label = tk.Label(root, text="ржЦрж╛ржмрж╛рж░рзЗрж░ ржзрж░ржи ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи:", font=("Arial", 12, "bold"), fg="#4a403a", bg="#f7e8c8")
dish_label.pack(pady=5)

dish_var = tk.StringVar()
dish_menu = tk.OptionMenu(root, dish_var, "ржкрзЛрж▓рж╛ржУ", "ржмрж┐рж░рж┐рзЯрж╛ржирж┐", "ржЦрж┐ржЪрзБржбрж╝рж┐", "рж╕ржмржЬрж┐ рждрж░ржХрж╛рж░рж┐", "ржбрж╛рж▓ ржнрж╛ржд", "ржЧрж░рзБрж░ ржорж╛ржВрж╕", "ржорзБрж░ржЧрж┐рж░ ржорж╛ржВрж╕")
dish_menu.configure(bg="#b4a7a1", fg="black", font=("Arial", 10))
dish_menu.pack(pady=5)

generate_button = tk.Button(root, text="рж░рзЗрж╕рж┐ржкрж┐ рждрзИрж░рж┐ ржХрж░рзБржи", command=show_recipe, font=("Arial", 12, "bold"), bg="#d4a373", fg="white", activebackground="#d49973")
generate_button.pack(pady=15)

# Initially hide the video button
video_button = tk.Button(root, text="ржнрж┐ржбрж┐ржУ ржжрзЗржЦрзБржи", command=lambda: play_video(dish_var.get()), font=("Arial", 12, "bold"), bg="#d4a373", fg="white")
# Do not pack it yet

recipe_text = tk.Text(root, width=50, height=18, font=("Arial", 10, "bold"), wrap="word", bg="#fffaf0", fg="#4a403a")
recipe_text.pack(padx=20, pady=10)

# ========== Tkinter GUI ржЪрж╛рж▓рзБ ========== #
root.mainloop()
